% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_method.R
\name{predict.causal_learner}
\alias{predict.causal_learner}
\title{Predict Method for Causal Learner Objects}
\usage{
\method{predict}{causal_learner}(object, new_data, policy = FALSE, policy_method = NULL)
}
\arguments{
\item{object}{An object of class \code{"causal_learner"} (and subclass such as
\code{"s_learner"}, \code{"t_learner"}, \code{"x_learner"}), typically returned by
\code{\link[=s_learner]{s_learner()}}, \code{\link[=t_learner]{t_learner()}}, or \code{\link[=x_learner]{x_learner()}}.}

\item{new_data}{A data frame containing new observations for prediction.}

\item{policy}{Logical. If \code{TRUE}, a treatment assignment policy is computed
based on predicted treatment effects.}

\item{policy_method}{Character. Policy method to apply (currently only \code{"greedy"}).}
}
\value{
A list with elements:
\describe{
\item{effect_measures}{A list of treatment effect measures. Depending on the
outcome type, includes:
* \code{y1_prob}, \code{y0_prob}: predicted outcomes under treatment/control
* \code{ITE}: individual treatment effect (\code{y1 - y0})
* \code{ATE}: average treatment effect
* \code{ATT}: average treatment effect on the treated
* \code{ATC}: average treatment effect on the control
* For classification: \code{RD}, \code{RR}, \code{RR_star}, \code{OR}, \code{NNT}, \code{PN}, \code{PNS}
}
\item{policy_details}{If \code{policy = TRUE}, a list with policy assignment,
gain curve, and optimal threshold information. Otherwise \code{NULL}.}
}
}
\description{
Generates counterfactual predictions and treatment effect estimates from
causal meta-learner models (\code{s_learner}, \code{t_learner}, \code{x_learner}).
}
\details{
Given new data, this function constructs counterfactual datasets (treatment = 1
and treatment = 0), applies the fitted models, and returns estimated
potential outcomes and treatment effect measures.
}
\examples{
\dontrun{
# S-learner fit
s_fit <- s_learner(data = df, outcome = "Y", treatment = "T", ...)

# Predict treatment effects
preds <- predict(s_fit, new_data = df)

# With greedy policy
preds_policy <- predict(s_fit, new_data = df, policy = TRUE, policy_method = "greedy")
}

}
